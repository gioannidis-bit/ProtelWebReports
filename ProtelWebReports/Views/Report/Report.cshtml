@model ProtelWebReports.Models.ReportModel
@{
    ViewData["Title"] = Model.Title;
}

<div class="container-fluid">
    <div class="report-header text-center my-4">
        <h2>@Model.Title</h2>
        <h4>@Model.FromDate.ToString("dd/MM/yyyy") - @Model.ToDate.ToString("dd/MM/yyyy")</h4>
    </div>

    <div class="actions-bar mb-3">
        <div class="row">
            <div class="col d-print-none">
                <button class="btn btn-primary" onclick="window.print()">Print Report</button>
                <button class="btn btn-secondary" onclick="exportToExcel()">Export to Excel</button>
                <button class="btn btn-info" onclick="location.href='@Url.Action("Index", "Report")'">New Report</button>
                <input type="text" class="form-control d-inline-block w-auto ms-2" id="searchInput"
                       placeholder="Search..." onkeyup="filterTable()">
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered table-striped" id="reportTable">
            <thead class="table-light">
                <tr>
                    @foreach (var column in Model.ColumnNames)
                    {
                        <th>@column</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var row in Model.Rows)
                {
                    string rowClass = "";
                    if (row.Count > 0)
                    {
                        if (row[0] == "100")
                        {
                            rowClass = "table-primary";
                        }
                        else if (row[0] == "-10" || row[0] == "-9" || row[0] == "-8")
                        {
                            rowClass = "table-secondary";
                        }
                    }

                    <tr class="@rowClass">
                        @foreach (var cell in row)
                        {
                            string cellClass = "";
                            if (!string.IsNullOrEmpty(cell))
                            {
                                if (cell.StartsWith("-"))
                                {
                                    cellClass = "text-danger";
                                }
                                else if (cell != "0" && int.TryParse(cell, out _))
                                {
                                    cellClass = "text-success";
                                }
                            }

                            <td class="@cellClass">@cell</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/xlsx@0.18.5/dist/xlsx.full.min.js"></script>
<script>
    function exportToExcel() {
        const table = document.getElementById('reportTable');
        const wb = XLSX.utils.table_to_book(table, { sheet: "@Model.Title" });
        const reportName = "@(Model.Title.Replace(" ", "_"))_@(Model.FromDate.ToString("yyyyMMdd"))_@(Model.ToDate.ToString("yyyyMMdd")).xlsx";
        XLSX.writeFile(wb, reportName);
    }

    function filterTable() {
        const input = document.getElementById('searchInput');
        const filter = input.value.toUpperCase();
        const table = document.getElementById('reportTable');
        const tr = table.getElementsByTagName('tr');

        for (let i = 1; i < tr.length; i++) {
            let txtValue = "";
            const td = tr[i].getElementsByTagName('td');

            for (let j = 0; j < td.length; j++) {
                txtValue += td[j].textContent || td[j].innerText;
            }

            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                tr[i].style.display = "";
            } else {
                tr[i].style.display = "none";
            }
        }
    }
</script>